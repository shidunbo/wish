<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd   "
	xmlns:mvc="http://www.springframework.org/schema/mvc">

	<!-- 自动读取。适配文件 start -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:conf.properties</value>
				<!-- <value>classpath*:jdbc.test.properties</value> -->
				<value>classpath*:jdbc.properties</value>
				<!-- <value>classpath*:log4j.properties</value> -->
				<!-- 可以适当增加个数据库 -->
			</list>
		</property>
	</bean>

	<!-- <import resource="classpath*:/spring/spring-mybatis.xml" /> -->
	<!-- 扫描文件（自动将servicec层注入） -->
	<context:component-scan base-package="com.mlx.orderpre" />

	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.mlx.orderpre"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
		<!-- 自动扫描@Service(防止事务失效) -->
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean id="mappingJackson2HttpMessageConverter"
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
						<!-- <value>text/html;charset=UTF-8</value> -->

					</list>
				</property>
				<property name="objectMapper">
					<bean class="com.mlx.orderpre.common.ObjectMappingCustomer"></bean>
				</property>
				<!-- 过滤转成JSON格式时的Null -->
				<!-- <property name="objectMapper"> <bean class="com.fasterxml.jackson.databind.ObjectMapper"> 
					<property name="serializationInclusion"> <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_EMPTY</value> 
					</property> </bean> </property> -->
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="springContextHolder" class="com.mlx.orderpre.common.SpringContextHolder"
		lazy-init="false" />

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/kingdee/**" />
			<bean class="com.mlx.orderpre.interceptor.ParamCheckInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>